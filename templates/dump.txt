
<form action="/" method="post" id="form">
    <button>select date </button>
    <input type="text" name="district_variable" id="" placeholder="Select District" id="district">
    <!-- <input type="text" id="" placeholder="Select facility"> -->
    <select  name="product_variable" id="product" >
        <option value="Blood">Blood</option>
        <option value="Medical Product">Medical product</option>
        <option value="Vaccine">Vaccine</option>
    </select>
    <input type="submit" value="Submit" >
    
</form>




















var mymap = L.map('mapid').setView([6.032076, -0.448527], 6);
    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
    attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
    maxZoom: 18,
    id: 'mapbox/dark-v10',
    tileSize: 512,
    zoomOffset: -1,
    accessToken: 'pk.eyJ1Ijoia3dhc2lzaWF3IiwiYSI6ImNrZGJxeTBxaDBkd3kyem5iOXpxMW9vbjIifQ.coqyUCryHBp_NrZurWxY5w'
    }).addTo(mymap);

    // adding Zipline custom marker
    var zipline = L.icon({
    iconUrl: "{{url_for('static',filename='zipline.jpg')}}",
    iconSize:     [15, 15], // size of the icon
    shadowSize:   [0, 0], // size of the shadow
    iconAnchor:   [5, 5], // point of the icon which will correspond to marker's location
    shadowAnchor: [4, 62],  // the same for the shadow
    popupAnchor:  [0, 0] // point from which the popup should open relative to the iconAnchor
    });

    //  rendering nest
    var nest = L.marker([6.079158, -0.467274],{icon:zipline}).addTo(mymap);

    // adding warehouse marker
    var medical_store = L.icon({
    iconUrl: "{{url_for('static',filename='warehouse.svg')}}",
    iconSize:     [15, 15], // size of the icon
    shadowSize:   [0, 0], // size of the shadow
    iconAnchor:   [5, 5], // point of the icon which will correspond to marker's location
    shadowAnchor: [4, 62],  // the same for the shadow
    popupAnchor:  [0, 0] // point from which the popup should open relative to the iconAnchor
    });
    // redering warehouse marker
    var warehouse = L.marker([6.072546206595685, -0.24863969471717115],{icon:medical_store}).addTo(mymap);

    // adding facility marker
    var facility = L.icon({
    iconUrl: "{{url_for('static',filename='hospital.jpg')}}",
    iconSize:     [15, 15], // size of the icon
    shadowSize:   [0, 0], // size of the shadow
    iconAnchor:   [5, 5], // point of the icon which will correspond to marker's location
    shadowAnchor: [4, 62],  // the same for the shadow
    popupAnchor:  [0, 0] // point from which the popup should open relative to the iconAnchor
    });

    // rendering marker
    var nest = L.marker([6.079158, -0.467274],{icon:zipline}).addTo(mymap);

    // rendering every facility
    // let myvar = {{results|tojson}}
    // let all_facilities = myvar['facilities'];

    // all_facilities.forEach(element => {
    //     console.log(element['HEALTH_FACILITY_NAME']);
    //     let lat = element['latitude'];
    //     let lon = element['longitude'];
    //     var facilities = L.marker([lat, lon],{icon:facility}).addTo(mymap);
        
    // });